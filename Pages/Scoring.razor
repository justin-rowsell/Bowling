@page "/scoring"
@using Bowling.Data
@using Bowling.Models

<PageTitle>Scoring</PageTitle>

<!-- Allow user to choose how many players are playing with radio button group -->
<div class="flex-col items-centered p-4"> 
    <h3 class="text-center text-4xl pt-8">How many players?</h3>
    <div class="flex-row items-centered py-8">
        <input type="number" min="1" max="8" @bind-value="_playerCount" disabled="@setPlayerCountDisabled"
            class="w-16 h-10 text-center border-2 border-gray-500 rounded-lg" />
        <button type="button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
            @onclick="() => CreateScorecards()" disabled="@setPlayerCountDisabled">
            Set Number of Players
        </button>
    </div>
</div>
@*Create a score card for each player*@
<div class="flex-col items-centered">
    @foreach (var player in PlayerScores) {
        <div class="flex-row items-centered py-6">
            <h3 class="text-2xl pb-4">@player.Name</h3>
            <ScoreCard RoundScores="player.Rounds" />
        </div>
    }
</div>

@*Add button to score game and display leaderboard*@
<div class="flex-col items-centered pb-8">
    <button type="button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
    @onclick="ScoreGames">
        Score Game
    </button>
    <button type="button" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
    @onclick="ResetGame">
        Reset Game
    </button>
</div>
@if (_showLeaderboard) {
    <Leaderboard PlayerScores="PlayerScores" />
}


@code {
    private int _playerCount = 1;
    protected List<PlayerScore> PlayerScores = new List<PlayerScore>();
    private bool setPlayerCountDisabled = false;
    private bool _showLeaderboard = false;

    private void CreateScorecards() {
        for (int i = 0; i < _playerCount; i++) {
            PlayerScores.Add(new PlayerScore() { Name = $"Player {i + 1}" });
        }
        setPlayerCountDisabled = true;
    }

    private void ScoreGames() {
        var engine = new ScoringEngine();
        foreach (var player in PlayerScores) {
            player.TotalScore = engine.CalculateScore(player.Rounds);
        }
        _showLeaderboard = true;
    }

    private void ResetGame() {
        PlayerScores.Clear();
        _playerCount = 1;
        setPlayerCountDisabled = false;
        _showLeaderboard = false;
    }   
}